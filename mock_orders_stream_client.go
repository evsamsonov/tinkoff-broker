// Code generated by mockery v2.43.2. DO NOT EDIT.

package tnkbroker

import (
	investgo "github.com/russianinvestments/invest-api-go-sdk/investgo"
	mock "github.com/stretchr/testify/mock"
)

// mockOrdersStreamClient is an autogenerated mock type for the ordersStreamClient type
type mockOrdersStreamClient struct {
	mock.Mock
}

// TradesStream provides a mock function with given fields: accounts
func (_m *mockOrdersStreamClient) TradesStream(accounts []string) (*investgo.TradesStream, error) {
	ret := _m.Called(accounts)

	if len(ret) == 0 {
		panic("no return value specified for TradesStream")
	}

	var r0 *investgo.TradesStream
	var r1 error
	if rf, ok := ret.Get(0).(func([]string) (*investgo.TradesStream, error)); ok {
		return rf(accounts)
	}
	if rf, ok := ret.Get(0).(func([]string) *investgo.TradesStream); ok {
		r0 = rf(accounts)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*investgo.TradesStream)
		}
	}

	if rf, ok := ret.Get(1).(func([]string) error); ok {
		r1 = rf(accounts)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// newMockOrdersStreamClient creates a new instance of mockOrdersStreamClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockOrdersStreamClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockOrdersStreamClient {
	mock := &mockOrdersStreamClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
